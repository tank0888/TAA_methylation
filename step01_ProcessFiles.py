import os
import pandas as pd

def peptide_mapping(row, target_seq):
    # Peptide sequence mapping check
    peptide_seq = row["Sequence"].split(".")[1]
    return "1" if peptide_seq in target_seq else "0"

def process_files(input_folder, output_folder, target_name, target_seq):
    # Process files to filter and save data based on protein sequence.
    file_names = os.listdir(input_folder)
    for file_name in file_names:
        input_file = os.path.join(input_folder, file_name)
        sample_name = file_name.split("_")[8]

        df_in = pd.read_csv(input_file, sep="\t")
        df_in = df_in.iloc[:, [3, 4, 10, 12, 16]]
        df_in.columns = ["Sequence", "Modifications", "PSMs", "Positions", "Abundance"]

        df_in[target_name] = df_in.apply(peptide_mapping, axis=1, args=(target_seq,))
        df_target = df_in[df_in[target_name] == "1"]
        df_target.reset_index(drop=True)

        output_path = os.path.join(output_folder, f"{sample_name}.csv")
        df_target.to_csv(output_path)

def main():
    target_name = "AtaA"
    target_seq = "MNKIYKVIWNATLLAWVAVSELAKGKTKSTTSKSKAKSLSSSVIVGGIILTTPLSLIAATVQVGGGTNSGTTATASTNCADLYNYQNPENSGSGAAGNYNAGNPSVCSIAIGENAQGGTSGTGGSPGIAIGGNSKATGGLSVAIGGYAQATNVGSIALGTAALSSGFNSLAISRQAAATNNYSIAIGTTSVSKGVGSIAMGHSTNASGDQSIAIGSSDAVNSATATTTYDGTTNTQASGSKSIAIGASAKASTNNSIALGAGSVTSAQSGNSYLTGVGASATNGVVSVGTSTATRRIQNVADGSAASDAVTVAQLDKAYDDTNGRLAAALGTGSGAAYNAANNTYTAPTNIGGTGKNTIDDAIKATQRSVVAGSNIVVTPTTASDGSISYSVATSATPTFTSITVNNAPTAGTDATNKTYVDSKAAASRTEVAAGSNVSGVVKTTGANGQDVYTVNANGTTASAGSSAVTVTPGTKDANNVTDYKVDLSATTKTDIQKGVDAKNAVDTAGLKFKGDTATTSNTKKLGDTVSITGDTNISTVATTDGVQVKLNPNLDLGATGSVKTGNTTINNAGVTADQVTVGGVVINNTSGINAGGKAITNVAAPTNNTDAANKKYVDDAGTALTNLGFGLKAQDGTTVNKKLGEAVDIVGSNSNISTKVNAGKVEVALSNTLDLGTTGSVTTGSTVINNAGVTATQVTANKVTINNAPTAGTDATNKTYVDSKAAASRTEVAAGSNVSGVVKTTGANGQDIYAVNANGTTASAGSSAVTVTPGTKDANNVTDYKVDLSATTKTDIQKGVDAKNAVDTAGLKFKGDTATTSNTKKLGDTVSITGDTNISTVATTDGVQVKLNPNLDLGATGSVKTGNTTINNAGVTADQVTVGGVVINNTSGINAGGKAITNVAAPTNNTDAANKKYVDDAGTALTNLGFGLKAQDGTTVNKKLGEAVDIVGSNSNISTKVNAGKVEVALSNTLDLGTTGSVTTGSTVINNAGVTATQVTANKVTVNNAPTAGTDATNKTYVDSKAAASRTEVAAGSNVSGVVKTTGANGQDVYTVNANGTTASAGSSAVTVTPGTKDANNVTDYKVDLSATTKTDIQKGVDAKNAVDTAGLKFKGDTATTSNTKKLGDTVSITGDTNISTVATTDGVQVKLNPNLDLGATGSVKTGNTTINNAGVTADQVTVGGVVINNTSGINAGGKAITNVAAPTNNTDAANKKYVDDAGTALTNLGFGLKAQDGTTVNKKLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNTDGSTNYNSITAGNGNGTAATIGTDTAGNSVVTSGGTKISNVANGVNASDAVNKGQLDSLSTGLTNTGFGLKAADGNTVNKKLGEAVDVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISIKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSANYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVVGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSANYNNVTLAGTNGTIISNVKAGAVTSTSTDAINGSQLYGVANSVKNAIGGSTTIDATTGAITTTNIGGTGSNTIDGAISSIKDSATKAKTTVSAGDNVVVTSGTNADGSTNYEVATAKDVNFDKVTVGSVVVDKSSNTIKGLSNTTWNGTAVSGQAATEDQLKTVSDAQGETDKFAVKYDKNADGSANYNSITAGNGNGTAATIGTDTAGNSVVTSGGTKISNVANGVNASDAVNKGQLDSLSTGLTNTGFGLKAADGNTVNKKLGEAVDVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISIKDGSGNTIAGVDNTALTVKDSSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNVTLAGTNGTIIRNVKAGAVTSTSTDAINGSQLYDIANSVKNAIGGSTTRDVTTGAITTTNIGGTGSNTIDGAISSIKDSATKAKTTISAGDNVVVTSGTNADGSTNYEVATAKDVNFDKVTVGNVVVDKANDTIQGLSNKDLNSTDFATKGRAATEEQLKAVITSNITEVVDGNGNKVNIIDQVVNTKPDNKNQDSLFLTYDKQGQETTDRLTIGQTVQKMNTDGIKFFHTNADTSKGDLGTTNDSSAGGLNSTAIGVNAIVANGADSSVALGHNTKVNGKQSIAIGSGAEALGNQSISIGTGNKVTGDHSGAIGDPTIVNGANSYSVGNNNQVLTDDTFVLGNNVTKTIAGSVVLGNGSAATTGAGEAGYALSVATNADKAAITKTTSSTGAVAVGDASSGIYRQITGVAAGSVDSDAVNVAQLKAVGNQVVTTQTTLVNSLGGNAKVNADGTITGPTYNVAQGNQTNVGDALTALDNAINTAATTSKSTVSNGQNIVVSKSKNADGSDNYEVSTAKDLTVDSVKAGDTVLNNAGITIGNNAVVLNNTGLTISGGPSVTLAGIDAGNKTIQNVANAVNATDAVNKGQLDSAINNVNNNVNELANNAVKYDDASKDKITLGGGATGTTITNVKDGTVAQGSKDAVNGGQLWNVQQQVDQNTTDISNIKNDINNGTVGLVQQAGKDAPVTVAKDTGGTTVNVAGTDGNRVVTGVKEGAVNATSKDAVNGSQLNTTNQAVVNYLGGGAGYDNITGSFTAPSYTVGDSKYNNVGGAIDALNQADQALNSKIDNVSNKLDNAFRITNNRIDDVEKKANAGIAAAMALESAPYVPGKYTYAAGAAYHGGENAVGVTLRKTADNGRWSITGGVAAASQGDASVRIGISGVID"
    input_folder = "input"
    output_folder = "output1"    
    
    process_files(input_folder, output_folder, target_name, target_seq)


if __name__ == "__main__":
    main()
