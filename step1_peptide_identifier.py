import pandas as pd
import os


prot_name = "AtaA"
prot_seq = "MNKIYKVIWNATLLAWVAVSELAKGKTKSTTSKSKAKSLSSSVIVGGIILTTPLSLIAATVQVGGGTNSGTTATASTNCADLYNYQNPENSGSGAAGNYNAGNPSVCSIAIGENAQGGTSGTGGSPGIAIGGNSKATGGLSVAIGGYAQATNVGSIALGTAALSSGFNSLAISRQAAATNNYSIAIGTTSVSKGVGSIAMGHSTNASGDQSIAIGSSDAVNSATATTTYDGTTNTQASGSKSIAIGASAKASTNNSIALGAGSVTSAQSGNSYLTGVGASATNGVVSVGTSTATRRIQNVADGSAASDAVTVAQLDKAYDDTNGRLAAALGTGSGAAYNAANNTYTAPTNIGGTGKNTIDDAIKATQRSVVAGSNIVVTPTTASDGSISYSVATSATPTFTSITVNNAPTAGTDATNKTYVDSKAAASRTEVAAGSNVSGVVKTTGANGQDVYTVNANGTTASAGSSAVTVTPGTKDANNVTDYKVDLSATTKTDIQKGVDAKNAVDTAGLKFKGDTATTSNTKKLGDTVSITGDTNISTVATTDGVQVKLNPNLDLGATGSVKTGNTTINNAGVTADQVTVGGVVINNTSGINAGGKAITNVAAPTNNTDAANKKYVDDAGTALTNLGFGLKAQDGTTVNKKLGEAVDIVGSNSNISTKVNAGKVEVALSNTLDLGTTGSVTTGSTVINNAGVTATQVTANKVTINNAPTAGTDATNKTYVDSKAAASRTEVAAGSNVSGVVKTTGANGQDIYAVNANGTTASAGSSAVTVTPGTKDANNVTDYKVDLSATTKTDIQKGVDAKNAVDTAGLKFKGDTATTSNTKKLGDTVSITGDTNISTVATTDGVQVKLNPNLDLGATGSVKTGNTTINNAGVTADQVTVGGVVINNTSGINAGGKAITNVAAPTNNTDAANKKYVDDAGTALTNLGFGLKAQDGTTVNKKLGEAVDIVGSNSNISTKVNAGKVEVALSNTLDLGTTGSVTTGSTVINNAGVTATQVTANKVTVNNAPTAGTDATNKTYVDSKAAASRTEVAAGSNVSGVVKTTGANGQDVYTVNANGTTASAGSSAVTVTPGTKDANNVTDYKVDLSATTKTDIQKGVDAKNAVDTAGLKFKGDTATTSNTKKLGDTVSITGDTNISTVATTDGVQVKLNPNLDLGATGSVKTGNTTINNAGVTADQVTVGGVVINNTSGINAGGKAITNVAAPTNNTDAANKKYVDDAGTALTNLGFGLKAQDGTTVNKKLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNTDGSTNYNSITAGNGNGTAATIGTDTAGNSVVTSGGTKISNVANGVNASDAVNKGQLDSLSTGLTNTGFGLKAADGNTVNKKLGEAVDVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISIKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSANYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVVGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNITLAGTTASSTQDATTGKITTTGGTSLNNVASAGDYKDVANASKGVNAGDLNNAVVDATNAATSKGFALQAADGAKVQKNLGEAVEVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISVKDGSGNTIAGVDNTALTVKDGSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSANYNNVTLAGTNGTIISNVKAGAVTSTSTDAINGSQLYGVANSVKNAIGGSTTIDATTGAITTTNIGGTGSNTIDGAISSIKDSATKAKTTVSAGDNVVVTSGTNADGSTNYEVATAKDVNFDKVTVGSVVVDKSSNTIKGLSNTTWNGTAVSGQAATEDQLKTVSDAQGETDKFAVKYDKNADGSANYNSITAGNGNGTAATIGTDTAGNSVVTSGGTKISNVANGVNASDAVNKGQLDSLSTGLTNTGFGLKAADGNTVNKKLGEAVDVVGADSNITTKVAGGQVAIELNKNLNNLTGITVNDGTNGTNGSTVIGKDGISIKDGSGNTIAGVDNTALTVKDSSGNTETSINQAINTLNAAQGETDKFAVKYDKNADGSVNYNNVTLAGTNGTIIRNVKAGAVTSTSTDAINGSQLYDIANSVKNAIGGSTTRDVTTGAITTTNIGGTGSNTIDGAISSIKDSATKAKTTISAGDNVVVTSGTNADGSTNYEVATAKDVNFDKVTVGNVVVDKANDTIQGLSNKDLNSTDFATKGRAATEEQLKAVITSNITEVVDGNGNKVNIIDQVVNTKPDNKNQDSLFLTYDKQGQETTDRLTIGQTVQKMNTDGIKFFHTNADTSKGDLGTTNDSSAGGLNSTAIGVNAIVANGADSSVALGHNTKVNGKQSIAIGSGAEALGNQSISIGTGNKVTGDHSGAIGDPTIVNGANSYSVGNNNQVLTDDTFVLGNNVTKTIAGSVVLGNGSAATTGAGEAGYALSVATNADKAAITKTTSSTGAVAVGDASSGIYRQITGVAAGSVDSDAVNVAQLKAVGNQVVTTQTTLVNSLGGNAKVNADGTITGPTYNVAQGNQTNVGDALTALDNAINTAATTSKSTVSNGQNIVVSKSKNADGSDNYEVSTAKDLTVDSVKAGDTVLNNAGITIGNNAVVLNNTGLTISGGPSVTLAGIDAGNKTIQNVANAVNATDAVNKGQLDSAINNVNNNVNELANNAVKYDDASKDKITLGGGATGTTITNVKDGTVAQGSKDAVNGGQLWNVQQQVDQNTTDISNIKNDINNGTVGLVQQAGKDAPVTVAKDTGGTTVNVAGTDGNRVVTGVKEGAVNATSKDAVNGSQLNTTNQAVVNYLGGGAGYDNITGSFTAPSYTVGDSKYNNVGGAIDALNQADQALNSKIDNVSNKLDNAFRITNNRIDDVEKKANAGIAAAMALESAPYVPGKYTYAAGAAYHGGENAVGVTLRKTADNGRWSITGGVAAASQGDASVRIGISGVID" 
folder_path = "input"


file_names = os.listdir(folder_path)
for file_name in file_names: 
    input_file = f"input/{file_name}" # name of proteomediscoverer peptides groups file
    sample_name = input_file.split("_")[8]

    dfin = pd.read_csv(input_file, sep="\t")
    def peptMapping(row):
        pept_seq = row["Sequence"].split(".")[1] 
        if pept_seq in prot_seq:
            return "1"
        else:
            return "0"
    # ["Annotated Sequence", "Modifications", "# PSMs", "Positions in Master Proteins", "Abundance: F3: Sample, n/a, e3, n/a, n/a"]を位置で指定
    dfin = dfin.iloc[:, [3, 4, 10, 12, 16]]
    dfin.columns = ["Sequence", "Modifications", "PSMs", "Positions", "Abundance"]
    dfin[f"{prot_name}"] = dfin.apply(peptMapping, axis=1)
    df1 = dfin[dfin[f"{prot_name}"] == "1"]
    df1_reset = df1.reset_index(drop=True)

    # save output1
    df1.to_csv(f"output1/output1_{sample_name}.csv")


# ###########
# # dataframeの作製
# Ksite = [i for i, char in enumerate(prot_seq) if char == "K"]
# data = {'Ksite': [1, 4, 6, 3, 5, 7, 5, 4]}
# df2 = pd.DataFrame(data)
# df2['Kabs_Un'] = 0
# df2['Kabs_mono'] = 0
# df2['Kabs_di'] = 0
# df2['Kabs_tri'] = 0

# # 
# for i in range(len(df1)):
#     abundance = float(df1.iloc[i]["Abundance"])

#     pept_pos = df1.iloc[i]["Positions"].split("[")
#     pept_pos.pop(0)
#     pept_pos = [float(i.split('-')[0]) for i in pept_pos]

#     resi_posi =     
#     print(pept_pos)
    